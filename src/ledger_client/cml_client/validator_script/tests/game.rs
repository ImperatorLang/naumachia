use super::*;
use sha2::{Digest, Sha256};
use uplc::PlutusData;

struct HashedString {
    inner: Vec<u8>,
}

impl HashedString {
    pub fn new(unhashed: &str) -> Self {
        let mut hasher = Sha256::new();
        hasher.update(unhashed.as_bytes());
        let inner = hasher.finalize().to_vec();
        HashedString { inner }
    }
}

impl AikenTermInterop for HashedString {
    fn to_term(&self) -> Result<Term<NamedDeBruijn>> {
        let data = PlutusData::BoundedBytes(self.inner.clone().into());
        let term = Term::Constant(Constant::Data(data));
        Ok(term)
    }
}

struct ClearString {
    inner: String,
}

impl ClearString {
    pub fn new(inner: &str) -> Self {
        ClearString {
            inner: inner.to_string(),
        }
    }
}

impl AikenTermInterop for ClearString {
    fn to_term(&self) -> Result<Term<NamedDeBruijn>> {
        let bytes = self.inner.as_bytes().to_vec();
        let data = PlutusData::BoundedBytes(bytes.into());
        let term = Term::Constant(Constant::Data(data));
        Ok(term)
    }
}

#[test]
fn execute_game_passes() {
    let script_file = game_script_file();
    let script = RawPlutusValidator::new_v1(script_file).unwrap();

    let word = "konnichiwa";

    let datum = HashedString::new(word);
    let redeemer = ClearString::new(word);
    let ctx = TxContext {
        signer: Address::Raw("placeholder".to_string()),
    };

    assert!(dbg!(script.execute(datum, redeemer, ctx)).is_ok());
}

#[test]
fn execute_game_fails() {
    let script_file = game_script_file();
    let script = RawPlutusValidator::new_v1(script_file).unwrap();

    let word = "konnichiwa";
    let bad_guess = "kombanwa";

    let datum = HashedString::new(word);
    let redeemer = ClearString::new(bad_guess);
    let ctx = TxContext {
        signer: Address::Raw("placeholder".to_string()),
    };

    assert!(dbg!(script.execute(datum, redeemer, ctx)).is_err()); // TODO: Make more specific
}

fn game_script_file() -> PlutusScriptFile {
    PlutusScriptFile {
        r#type: "PlutusScriptV1".to_string(),
        description: "".to_string(),
        cborHex: "59072d59072a010000332323232323232323232323232323322323232322222323253353330\
    06375c00a6eb8010cccd5cd19b8735573aa00490001199109198008018011919191919191919191919199\
    9ab9a3370e6aae754029200023333333333222222222212333333333300100b00a0090080070060050040\
    03002335014232323333573466e1cd55cea80124000466442466002006004603e6ae854008c064d5d09ab\
    a2500223263533573805205004e04c26aae7940044dd50009aba1500a33501401535742a012666aa02eeb\
    94058d5d0a804199aa80bbae501635742a00e66a02803e6ae854018cd4050cd54088081d69aba15005323\
    2323333573466e1cd55cea801240004664424660020060046464646666ae68cdc39aab9d5002480008cc8\
    848cc00400c008cd4095d69aba150023026357426ae8940088c98d4cd5ce01681601581509aab9e500113\
    7540026ae854008c8c8c8cccd5cd19b8735573aa004900011991091980080180119a812bad35742a00460\
    4c6ae84d5d1280111931a99ab9c02d02c02b02a135573ca00226ea8004d5d09aba2500223263533573805\
    205004e04c26aae7940044dd50009aba1500433501475c6ae85400ccd4050cd54089d710009aba1500230\
    1c357426ae8940088c98d4cd5ce01281201181109aba25001135744a00226ae8940044d5d1280089aba25\
    001135744a00226ae8940044d5d1280089aab9e5001137540026ae854008c8c8c8cccd5cd19b875001480\
    188c848888c010014c05cd5d09aab9e500323333573466e1d400920042321222230020053019357426aae\
    7940108cccd5cd19b875003480088c848888c004014c054d5d09aab9e500523333573466e1d4011200023\
    2122223003005375c6ae84d55cf280311931a99ab9c02001f01e01d01c01b01a135573aa00226ea8004d5\
    d09aba2500223263533573803203002e02c202e264c6a66ae712410350543500017016135573ca00226ea\
    800448c88c008dd6000990009aa80a111999aab9f00125009233500830043574200460066ae8800804c8c\
    8c8c8cccd5cd19b8735573aa00690001199911091998008020018011919191999ab9a3370e6aae7540092\
    000233221233001003002301535742a00466a01c0286ae84d5d1280111931a99ab9c01901801701613557\
    3ca00226ea8004d5d0a801999aa803bae500635742a00466a014eb8d5d09aba2500223263533573802a02\
    802602426ae8940044d55cf280089baa0011335500175ceb44488c88c008dd5800990009aa80911191999\
    aab9f0022500823350073355015300635573aa004600a6aae794008c010d5d100180909aba10011122002\
    1221223300100400312232323333573466e1d4005200023212230020033005357426aae79400c8cccd5cd\
    19b8750024800884880048c98d4cd5ce00880800780700689aab9d500113754002464646666ae68cdc39a\
    ab9d5002480008cc8848cc00400c008c014d5d0a8011bad357426ae8940088c98d4cd5ce0070068060058\
    9aab9e5001137540024646666ae68cdc39aab9d5001480008dd71aba135573ca004464c6a66ae7003002c\
    0280244dd500089119191999ab9a3370ea00290021091100091999ab9a3370ea004900111909111801802\
    18031aba135573ca00846666ae68cdc3a801a400042444004464c6a66ae7003c03803403002c0284d55ce\
    a80089baa0012323333573466e1d40052002212200223333573466e1d4009200021220012326353357380\
    1601401201000e26aae74dd5000919191919191999ab9a3370ea002900610911111100191999ab9a3370e\
    a004900510911111100211999ab9a3370ea00690041199109111111198008048041bae35742a00a6eb4d5\
    d09aba2500523333573466e1d40112006233221222222233002009008375c6ae85401cdd71aba135744a0\
    0e46666ae68cdc3a802a400846644244444446600c01201060186ae854024dd71aba135744a01246666ae\
    68cdc3a8032400446424444444600e010601a6ae84d55cf280591999ab9a3370ea00e9000119091111111\
    80280418071aba135573ca018464c6a66ae7004c04804404003c03803403002c0284d55cea80209aab9e5\
    003135573ca00426aae7940044dd50009191919191999ab9a3370ea002900111999110911998008028020\
    019bad35742a0086eb4d5d0a8019bad357426ae89400c8cccd5cd19b875002480008c8488c00800cc020d\
    5d09aab9e500623263533573801801601401201026aae75400c4d5d1280089aab9e500113754002464646\
    666ae68cdc3a800a400446424460020066eb8d5d09aab9e500323333573466e1d40092000232122300200\
    3375c6ae84d55cf280211931a99ab9c009008007006005135573aa00226ea800444888c8c8cccd5cd19b8\
    735573aa0049000119aa80518031aba150023005357426ae8940088c98d4cd5ce00480400380309aab9e5\
    001137540029309000a481035054310011221233001003002112323001001223300330020020012223233\
    3573466e3c010004488008488004dc90011"
            .to_string(),
    }
}
